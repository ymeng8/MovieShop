@model ApplicationCore.Models.ReviewRequestModel
@using ApplicationCore.Contracts.Service
@using MovieShopMVC.Infra
@inject ICurrentUser currentUser
@inject IUserService userService

@if (currentUser.IsAuthenticated)
{
    var reviewExists = await userService.ReviewExists(currentUser.UserId, Model.MovieId);
    if (reviewExists)
    {
        var reviewDetails = await userService.GetReviewDetails(currentUser.UserId, Model.MovieId);

        <button type="button" class="btn btn-sm btn-secondary" data-bs-toggle="modal" data-bs-target="#reviewDetailsModal"><i class="bi-card-text me-2"></i>REVIEW</button>
        <div class="modal fade" id="reviewDetailsModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">REVIEW DETAILS</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body text-break">
                        <ul class="list-group list-group-flush px-3">
                            <li class="list-group-item">
                                <i class="bi-camera-video me-1"></i>
                                <strong>@reviewDetails.MovieTitle</strong>
                            </li>
                            <li class="list-group-item">
                                <i class="bi-calendar3 me-1"></i>
                                <span>Review Date</span>
                                <span class="badge rounded-pill bg-dark ms-1">@reviewDetails.CreatedDate.ToString("MMM d, yyyy")</span>
                            </li>
                            <li class="list-group-item">
                                <i class="bi-award me-1"></i>
                                <span>Rating</span>
                                <span class="badge rounded-pill bg-dark ms-1">@reviewDetails.Rating.ToString("F0") / 10</span>
                            </li>
                        </ul>
                        <p class="p-3 m-0">@reviewDetails.ReviewText</p>
                    </div>
                    <div class="modal-footer">
                        <form asp-controller="User" asp-action="DeleteReview">
                            <input asp-for="UserId" value="@currentUser.UserId" type="hidden" />
                            <input asp-for="MovieId" value="@Model.MovieId" type="hidden" />
                            <div class="text-end">
                                <button type="submit" class="btn btn-outline-danger">Delete</button>
                            </div>
                        </form>

                        <a class="btn btn-primary" asp-controller="User" asp-action="EditReview" asp-route-id="@Model.MovieId">Edit</a>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <button type="button" class="btn btn-sm btn-secondary" data-bs-toggle="modal" data-bs-target="#reviewModal"><i class="bi-card-text me-2"></i>REVIEW</button>
        <div class="modal fade" id="reviewModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="reviewModalLabel">ADD REVIEW</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form asp-controller="User" asp-action="AddReview">
                            <input asp-for="UserId" value="@currentUser.UserId" type="hidden" />
                            <input asp-for="MovieId" value="@Model.MovieId" type="hidden" />
                            <input asp-for="MovieTitle" value="@Model.MovieTitle" type="hidden" />
                            <div class="form-group mb-3">
                                <label asp-for="Rating" for="reviewRating" class="form-label">Choose rating:</label>
                                <select asp-for="Rating" id="reviewRating" class="form-select" required>
                                    <option selected></option>
                                    @for (int i = 1; i < 11; i++)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                                <span asp-validation-for="Rating" class="text-danger"></span>
                            </div>
                            <div class="form-group mb-3">
                                <label asp-for="ReviewText" for="reviewTextArea" class="form-label">Write review:</label>
                                <textarea asp-for="ReviewText" id="reviewTextArea" class="form-control" rows="3" type="text" required></textarea>
                                <span asp-validation-for="ReviewText" class="text-danger"></span>
                            </div>
                            <div class="form-group text-end">
                                <button type="button" class="btn btn-outline-secondary me-1" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
}
else
{
    <a class="btn btn-sm btn-secondary" asp-controller="Account" asp-action="Login"><i class="bi-card-text me-2"></i>REVIEW</a>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}