@using ApplicationCore.Models;
@model PagedResultSet<MovieCardModel>;

@{
    ViewData["Title"] = "Movies of Genre";
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="container-fluid">
    <div class="row px-3 pt-2">
        @foreach (var movieCard in Model?.Data)
        {
            <div class="col-6 col-sm-4 col-lg-3 col-xl-2">
                <partial name="_MovieCardPartial" model="@movieCard" />
            </div>
        }
    </div>

    <nav class="px-3 pb-4">
        <ul class="pagination mb-0">
            <li class="page-item @prevDisabled">
                <a asp-action="GenreMovies" asp-route-page="1" class="page-link">
                    <span>&laquo;&laquo;</span>
                </a>
            </li>

            <li class="page-item @prevDisabled">
                <a asp-action="GenreMovies" asp-route-page="@(Model.PageIndex-1)" class="page-link">
                    <span>&laquo;</span>
                </a>
            </li>

            @for (int i = 1; i <= 5; i++)
            {
                <li class="page-item"><a class="page-link" asp-action="GenreMovies" asp-route-page="@i">@i</a></li>
            }

            <li class="page-item disabled"><a class="page-link">...</a></li>

            <li class="page-item @nextDisabled">
                <a asp-action="GenreMovies" asp-route-page="@(Model.PageIndex+1)" class="page-link">
                    <span>&raquo;</span>
                </a>
            </li>

            <li class="page-item @nextDisabled">
                <a asp-action="GenreMovies" asp-route-page="@Model.TotalPages" class="page-link">
                    <span>&raquo;&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>